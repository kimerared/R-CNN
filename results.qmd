---
jupyter: python3
---

# Results

## Faster R-CNN

We used the Faster R-CNN model from TensorFlow Hub (Inception-ResNet-V2). According to the authors @szegedy2017inception, Inception-ResNet-V2 is a deep convolutional neural network architecture introduced as part of the Inception family.

The Faster R-CNN results can be seen in images 1-4. In the first image, the model was fairly accurate in identifying individual chairs and a couple of the tables.

![Faster R-CNN result 1](images/results/Image%201.png){style="text-align: center;" fig-alt="Faster R-CNN result 1" fig-align="center"}

{{< pagebreak >}}

In the second image, Faster R-CNN correctly identified all beetles.

![Faster R-CNN result 2](images/results/Image%202.png){style="text-align: center;" fig-alt="Faster R-CNN result 2"}

{{< pagebreak >}}

In the third image the model had some issues with misclassifications of the types of phones.

![Faster R-CNN result 3](images/results/Image%203.png){style="text-align: center;" fig-alt="Faster R-CNN result 3" fig-align="center"}

{{< pagebreak >}}

In the fourth image there seemed to be some confusion in the distinction between birds and animals in general.

![Faster R-CNN result 4](images/results/Image%204.png){style="text-align: center;" fig-alt="Faster R-CNN result 4" fig-align="center"}

{{< pagebreak >}}

## Mask R-CNN

Images 5-7 are the results from the Mask R-CNN model that was trained from the COCO dataset. Based on the results this model seems to perform much better than the Faster R-CNN model.

In image five, Mask R-CNN very accurately detected the giraffe and two zebras.

![Mask R-CNN result 1](images/results/Image%205.png){style="text-align: center;" fig-alt="Mask R-CNN result 1" fig-align="center"}

{{< pagebreak >}}

In image six, the model was able to clearly detect the objects with a high mean average precision.

![Mask R-CNN result 2](images/results/Image%206.png){style="text-align: center;" fig-alt="Mask R-CNN result 2" fig-align="center"}

{{< pagebreak >}}
Image seven comes from a video that was fed to the Mask R-CNN model. In this frame, the model did have some trouble identifying all the objects.

![Mask R-CNN result 3](images/results/Image%207.png){style="text-align: center;" fig-alt="Mask R-CNN result 3" fig-align="center"}

{{< pagebreak >}}

## YOLOv8

The last model used in our analysis was YOLOv8. This model also seemed to perform better than the Faster R-CNN model. Our YOLOv8 small (YOLOv8s) model was trained on a custom dataset that consisted of tanks and was subsequently tested on test photos of tanks. Images 8-10 show the results of the YOLOv8s model. The model accurately identified all of the tanks.

![YOLOv8 result 1](images/results/Image%208.png){style="text-align: center;" fig-alt="YOLOv8 result 1" fig-align="center"}

![YOLOv8 result 2](images/results/Image%209.png){style="text-align: center;" fig-alt="YOLOv8 result 2"}

![YOLOv8 result 3](images/results/Image%2010.png){style="text-align: center;" fig-alt="YOLOv8 result 3" fig-align="center"}
